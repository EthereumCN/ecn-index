{"version":3,"sources":["webpack:///./node_modules/react-seo-component/dist/react-seo-component.esm.js","webpack:///./src/template/layer2Category.js"],"names":["Facebook","_ref","url","type","title","desc","image","locale","createElement","property","content","Twitter","_ref$type","username","name","titleTemplate","titleSeparator","description","pathname","_ref$article","article","siteLanguage","siteLocale","twitterUsername","_ref$author","author","datePublished","dateModified","seo","slice","Date","now","toISOString","copyrightYear","getFullYear","schemaOrgWebPage","headline","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","itemListElement","item","position","schemaArticle","logo","push","breadcrumb","Fragment","lang","rel","href","JSON","stringify","Category","props","siteMetadata","data","site","childrenImageSharp","file","fixed","src","path","publishedDate","lastBuildDate","modifiedDate","mb","w","maxW","mx","pt","mt","color","as","Link","to","isCurrentPage","fontSize","fontFamily","borderColor","allStrapiArticles","nodes","map","value","index","key"],"mappings":"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","file":"component---src-template-layer-2-category-js-d7be4c5662901304cfb0.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nvar Facebook = function Facebook(_ref) {\n  var url = _ref.url,\n      type = _ref.type,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image,\n      locale = _ref.locale;\n  return React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"og:locale\",\n    content: locale\n  }), React.createElement(\"meta\", {\n    property: \"og:url\",\n    content: url\n  }), React.createElement(\"meta\", {\n    property: \"og:type\",\n    content: type\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    property: \"og:image:alt\",\n    content: desc\n  }));\n};\n\nvar Twitter = function Twitter(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'summary_large_image' : _ref$type,\n      username = _ref.username,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image;\n  return React.createElement(Helmet, null, username && React.createElement(\"meta\", {\n    name: \"twitter:creator\",\n    content: username\n  }), React.createElement(\"meta\", {\n    name: \"twitter:card\",\n    content: type\n  }), React.createElement(\"meta\", {\n    name: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"twitter:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image:alt\",\n    content: desc\n  }));\n};\n\nvar SEO = function SEO(_ref) {\n  var title = _ref.title,\n      titleTemplate = _ref.titleTemplate,\n      titleSeparator = _ref.titleSeparator,\n      description = _ref.description,\n      pathname = _ref.pathname,\n      _ref$article = _ref.article,\n      article = _ref$article === void 0 ? false : _ref$article,\n      image = _ref.image,\n      siteLanguage = _ref.siteLanguage,\n      siteLocale = _ref.siteLocale,\n      twitterUsername = _ref.twitterUsername,\n      _ref$author = _ref.author,\n      author = _ref$author === void 0 ? 'J Doe.' : _ref$author,\n      datePublished = _ref.datePublished,\n      dateModified = _ref.dateModified;\n  var seo = {\n    title: title.slice(0, 70),\n    description: description.slice(0, 160),\n    datePublished: datePublished ? null : new Date(Date.now()).toISOString(),\n    dateModified: dateModified ? null : new Date(Date.now()).toISOString()\n  };\n  var copyrightYear = new Date().getFullYear(); // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n  // Structured Data Testing Tool >>\n  // https://search.google.com/structured-data/testing-tool\n\n  var schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: pathname,\n    headline: seo.description,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: pathname,\n    description: seo.description,\n    name: seo.title,\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightYear: copyrightYear,\n    creator: {\n      '@type': 'Person',\n      name: author\n    },\n    publisher: {\n      '@type': 'Person',\n      name: author\n    },\n    datePublished: seo.datePublished,\n    dateModified: seo.dateModified,\n    image: {\n      '@type': 'ImageObject',\n      url: \"\" + image\n    }\n  }; // Initial breadcrumb list\n\n  var itemListElement = [{\n    '@type': 'ListItem',\n    item: {\n      '@id': pathname,\n      name: 'Homepage'\n    },\n    position: 1\n  }];\n  var schemaArticle = null;\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightYear: copyrightYear,\n      creator: {\n        '@type': 'Person',\n        name: author\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: author,\n        logo: {\n          '@type': 'ImageObject',\n          url: \"\" + image\n        }\n      },\n      datePublished: seo.datePublished,\n      dateModified: seo.dateModified,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: pathname,\n      name: seo.title,\n      image: {\n        '@type': 'ImageObject',\n        url: image\n      },\n      mainEntityOfPage: pathname\n    }; // Push current blog post into breadcrumb list\n\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: seo.title\n      },\n      position: 2\n    });\n  }\n\n  var breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement: itemListElement\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: seo.title,\n    titleTemplate: \"%s \" + (titleSeparator ? titleSeparator : \"\\xB7\") + \" \" + titleTemplate\n  }, React.createElement(\"html\", {\n    lang: siteLanguage ? siteLanguage : 'en'\n  }), React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: pathname\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: seo.description\n  }), !article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaOrgWebPage)), article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaArticle)), React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumb))), image && React.createElement(React.Fragment, null, React.createElement(Facebook, {\n    desc: seo.description,\n    image: image,\n    title: seo.title,\n    type: article ? 'article' : 'website',\n    url: pathname,\n    locale: siteLocale ? siteLocale : 'en_gb'\n  }), React.createElement(Twitter, {\n    title: seo.title,\n    image: image,\n    desc: seo.description,\n    username: twitterUsername\n  })));\n};\n\nexport default SEO;\nexport { Facebook, Twitter };","import React from \"react\"\nimport {  Box, Heading, Divider, Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,  } from \"@chakra-ui/core\"\n  import { Link } from \"gatsby\"\nimport SEO from 'react-seo-component'\nimport EachList from \"../components/eachList\"\nimport { graphql } from 'gatsby' \nimport Layout from \"../components/layout\"\nimport  Paginate from '../components/Paginate'\nconst Category = (props) => {\n  const {siteMetadata} = props.data.site\n  const {childrenImageSharp} = props.data.file\n  return (\n    <Layout >\n     <SEO\n        title=\"扩容方案\"\n        titleTemplate={siteMetadata.title}\n        description={siteMetadata.description}\n        image={'https://ethereum.cn'+childrenImageSharp[0].fixed.src}\n        pathname={'https://ethereum.cn'+props.path}\n        siteLanguage={siteMetadata.siteLanguage}\n        siteLocale={siteMetadata.siteLocale}\n        twitterUsername={siteMetadata.twitterUsername}\n        author={siteMetadata.author}\n        publishedDate={siteMetadata.lastBuildDate}\n        modifiedDate={new Date(Date.now()).toISOString()}\n      />\n      < Box mb=\"30vh\">\n      <Box\n        w=\"100%\"\n        maxW={1080}\n        mx=\"auto\"\n      \n        pt={[\"20px\", \"20px\", \"50px\", \"40px\"]}\n        mt=\"2vw\"\n      >\n          {/* Breadcrumb */}\n  <Breadcrumb color=\"#fff\" mt=\"4rem\" mb=\"2rem\">\n        <BreadcrumbItem>\n          <BreadcrumbLink as={Link} to=\"/\">首页</BreadcrumbLink>\n        </BreadcrumbItem>\n\n        <BreadcrumbItem isCurrentPage>\n          <BreadcrumbLink as={Link} to=\"#\">扩容方案</BreadcrumbLink>\n        </BreadcrumbItem>\n      </Breadcrumb>\n        <Heading fontSize=\"2.5rem\" fontFamily=\"NotoSansSC-Regular\" color=\"#fff\">\n        扩容方案\n        </Heading>\n        <Divider w=\"100%\" borderColor=\"#ddd\" mt=\"1vw\" mx=\"auto\" />\n      </Box>\n     \n      {props.data.allStrapiArticles.nodes.map((value, index) => (\n        <EachList value={value} key={index} />\n      ))}\n           <Box mt=\"6rem\">\n  \n  <Paginate props={props}/>\n</Box>\n      </Box>\n  \n    </Layout>\n  )\n}\n\nexport default Category\n\nexport const pageQuery = graphql`\n  query layer2($skip: Int!, $limit: Int!) {\n    allStrapiArticles(\n      skip: $skip\n      limit: $limit\n      sort: {fields: publishDate, order: DESC}\n      filter: { mainTag: { eq: \"Layer2\" } }\n    ) {\n      nodes {\n        id\n        path\n        title\n        author\n        summary\n        authorImg {\n          childImageSharp {\n            fixed(width: 25, height: 25) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        publishDate(formatString: \"YYYY-MM-DD\")\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000, maxHeight: 450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n        siteLanguage\n        siteLocale\n        siteUrl\n        twitterUsername\n      }\n    }\n    file(name: {eq: \"hero\"}) {\n      childrenImageSharp {\n        fixed {\n          src\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}