{"componentChunkName":"component---src-template-article-js","path":"/Eth2/weeth-ama","result":{"data":{"strapiArticles":{"title":"WeEth Staker论坛AMA整理","summary":"Prysm 和 Lighthouse 开发者回答中国社区关于Eth2 和客户端的相关问题","publishDate":"2021-03-12","author":"WeETH","authorImg":{"childImageSharp":{"fixed":{"src":"/static/cb1d23d42b8ff84b7c158fa04b2e3c6e/497c6/7e60fe91fbe6af9122ed8fd756d0cf21.png"}}},"content":"整理翻译自 [WeEth.org](https://forum.weeth.org/t/topic/81)\n\n<br/>\n\n# Q:\n\n\n此去年 12 月信标链创世以来，2.0 网络验证者节点从 16,384 增加到现在的 10+ 万。这让 eth2.0 成为最去中心化的 PoS 链 (PoS 链还有 Cardano、Polkadot 等)。我个人认为，以太坊将实现更加去中心化和更加扩容的目标。\n\n以下是我的问题：\n\n1. eth1&eth2 研发的重点有哪些？有比较棘手的挑战需要解决吗？\n\n2. 轻客户端、分片以及合并这三项工作目前的进展如何？\n\n3. 你们觉得 PoS 链怎么样才算运行足够稳定及安全，并且能够进行完全的 eth1 迁移？\n\n\n\n感谢你们回答社区的问题\n\n### Raul:\n\n\n有两个优先处理的重点工作：分片和 eth1->eth2 合并。至于数据分片，除了 p2p 网络的一些实现细节外，所有事情都已经解决了。至于 eth1->eth2 合并，现在有一份提案和规范正在进行中：https://github.com/ethereum/eth2.0-specs/pull/2229\n\n我认为，从实现的角度来看，分片 p2p 网络比 eth1->eth2 合并更加复杂，目前很多研究都集中在这这方面上。\n\n\nEth1 合并需要以下前提：(1)验证者节点足够去中心化；(2)至少运行一年；(3)验证者参与率较稳定；(4)稳定的运行软件。\n\n### Paul:\n\n> eth1&eth2 研发的重点有哪些？有比较棘手的挑战需要解决吗？\n\n\n我认为优先事项依次为：\n\n1. 确保信标链 (阶段0) 稳定、安全地运行，并给予验证者们最大化的奖励。\n2.  eth1->eth2 合并\n3. 在 eth2 引入分片\n\n\n(1) 的挑战挺明确的，就是简单的“方法—改善—新方法”的循环过程，直到我们达到一个十分稳定的运行状态。\n\n(2) 的挑战也挺明确的，然而还是有一些与当前的 eth1 实现上的协作挑战 (他们非常友好，所以这应该不是问题)，并且计算一下社区对合并的投入，确保ch尽可能少的破环\n\n至于 (3) 的挑战，仍有一些非常新的加密学/数学方面的问题需要实现，并且证明其是可稳定进行的。\n\n还有其他值得关注的挑战，如我们要解决一个更加复杂的网络拓扑学问题。然而，我相信我们可以很好地克服这些挑战，eth2 开发者们都是非常棒的。\n\n> 轻客户端、分片以及合并这三项工作目前的进展如何？\n\n- 轻客户端：我没有密切关注这个，但是知道规范正在撰写中。\n- 分片：仍处于研究阶段，一些与加密学和网络相关的概念证明实现正在进行。\n- 合并：2020 年年中就已经有了一些关于合并的概念证明。Vitalik 刚发布了文章《[通过分叉选择改变来实现快速合并](https://notes.ethereum.org/@vbuterin/B1mUf6DXO)》“Quick merge via fork choice change”，解释了实现合并的一个更快的方法。Lighthouse 还没开始这方面的开发，但是预估下个月就要开始了。个人来说，我已经迫不及待了！\n\n> 你们觉得 PoS 链怎么样才算运行足够稳定及安全，并且能够进行完全的 eth1 迁移？\n\n\n我认为信标链目前运行十分稳定和安全。我不能准确地说从中可以得出什么结论，但如果信标链接下来几个月都能持续稳定运行，并且首次升级 Altiar 硬分叉能够顺利进行，那么我认为是时候可以合并了！\n\n<br/>\n\n# Q:\n\n之前在 What’s New in Eth2 系列的某篇[更新](https://hackmd.io/@benjaminion/wnie2_210115) 中看到说，今年的目标是在第一季度撰写关于“数据分片、合并、轻客户端”这三项工作的规范，然后再决定实现与交付的先后顺序。请问一下，规范撰写工作现在完成度怎么样？Prysm 客户端和 Lighthouse 客户端有开始为合并做测试准备吗？\n\n<br/>\n\n### Raul:\n\n\n现在有一份进行中的 eth1/eth2 合并规范 [[WIP](https://github.com/ethereum/eth2.0-specs/pull/2229) The Merge by mkalinin · Pull Request #2229 · ethereum/eth2.0-specs · GitHub。从实现的角度来看，（合并的）难度比分片小。分片亟待解决的最难部分在于 p2p networking，因为一个节点在分片型以太坊网络中需要具备处理许多重要问题的能力。Prysmatic Labs 已经围绕着分片展开了许多工作，我的一位同事 Terence Tsao 是目前分片规范的主要贡献者之一。我们还计划尽快开始合并相关的初步工作\n\n<br/>\n\n# Q:\n\n信标链首次升级快要进行了，什么时候有公共测试网？\n\n\n### Raul:\n\n\n计划在未来几个月会完成这项工作，可能的话，将在初夏推出测试网。协作一个硬分叉是很难的，很快我们就会迎来 Eth2 的第一个硬分叉，因此所有团队都额外谨慎地对待这次硬分叉。\n\n### Paul:\n\n\n客户端会在这个月发布一个测试网，开始测试有更多质押者的情况。技术上来说或，这是个公共测试网，但我们不会一开始就鼓励用户去参与，因为我们想在无须担心用户机器崩溃问题的情况下进行一些强度较大的测试。\n\n我们大概会在未来几个月内为即将发生的 Altair 硬分叉启动一个测试网。就我所知，目前还没有具体的计划。\n\n<br/>\n\n# Q:\n\n以太坊1.0 和以太坊2.0 合并的技术难度有多大？现在进展到什么地步了？你觉得目前最大的困难在于什么？\n\n\n\n### Raul:\n\n\n\n我想关于 eth1 与 eth2 将如何合并现在已经有一个很明确的方向了，但在这方面，eth2 客户端目前还没开始非常深入的工作。今天Mikhail Kalinin 今天发了一份 eth1/eth2 合并规范 [[WIP\\] The Merge by mkalinin · Pull Request #2229 · ethereum/eth2.0-specs · GitHub](https://github.com/ethereum/eth2.0-specs/pull/2229)。现在主要的困难在于我们现在专注于 eth2 的硬分叉、提高当前权益证明信标链主网的性能与安全性、以及使我们的软件对质押者更友好。在未来两个月，我们将开始把工作重心转移到 Prysm 的合并工作上。\n\n<br/>\n\n# Q:\n\n如果ETH1和ETH2将走向合并，ETH1客户端们将何去何从…我们会有10个客户端吗？还是说ETH1客户端团队们就不干了？\n\n\n\n### Raul:\n\n\n好问题。合并后，你将需要运行一个 eth1 节点 (用作交易与 EVM )，和一个 eth2 节点 (用作信标链和权益证明共识)。它们可以打包在一起，在一个计算机上运行。至于要运行哪个客户端，那是由社区来决定，例如：go-ethereum + prysm、go-ethereum + lighthouse等。我不确定哪个会是最受欢迎的 eth1 客户端 + eth2 客户端组合，但 go-ethereum 是很强的 eth1 客户端。\n\n<br/>\n\n# Q:\n\nHi~虽然pow和pos是不同的机制，但对于客户端来说，eth1的客户端已经相对成熟了，请问你们在开发的时候有需要借鉴eth1 客户端的情况吗？是哪些方面？\n\n\n### Paul:\n\n\nLighthouse 一开始的确是研究了 OpenEthereum 和 Substrate ，但我们最后并没有直接从它们身上拿很多东西。OE 在很久之前就被开发出来了，他们对 Rust 的使用比较过时。 Substrate 的使用则更简练和现代，但它们专注于灵活度，这是我们不需要的 (我们只想在一条特定区块链上运行，而不是多条区块链)。\n\n我们与 Substrate 和其他项目共享一个网络代码库 (`rust-libp2p`)，因此我们的确在那里共享代码。\n\n<br/>\n\n# Q:\n\n信标链验证者人数已经很久没有增长了，你觉得下一个可能促进数量增长的热点是什么？\n\n\n### Raul:\n\n\n我想 Coinbase 的质押服务和 Rocket Pool 上线后会有更多验证者去排队。\n\n<br/>\n\n# Q:\n\n前几天说验证者队列为零，此事你们怎么看？\n\n\n\n### Raul:\n\n\n接下来很快就会有大型的 Staking 服务上线了：Coinbase 和 Rocket Pool。我觉得验证者队列不会空很久，今年会很多人对加入 eth 网络感兴趣的。\n\n### Paul:\n\n\n我个人来说觉得这样挺好的，因为更多的验证者意味着网络负载更大，我们就需要花更多心思来优化。这只是一个自私的想法！\n\n我觉得目前的验证者节点数量已经非常可观了，能够满足我们对去中心化的需求。没有新的验证者排队也许是因为当下所有想要参加质押的用户已经进场了，这完全没有问题！我比较担心的是，出现重大的网络安全事件，或者强劲的竞争对手而失去一大部分的以太坊2.0验证者，但是这发生的机率很小。\n\n<br/>\n\n# Q:\n\n我看客户端经常在更新小版本（尤其是Prysm，我关注你很久了，三天两头更新。。。） 更新主要提升了什么性能？相比最初的1.0版本，你们的性能更好了吗？提高了多少？\n\n我不更新的话是不是就不会出错？除非发生硬分叉升级？因为我看新版本有时被发现有各种各样的bug，所以我总倾向于不去更新\n\n\n\n### Raul:\n\n\n从 v.1.0.0 升级到 1.x.0 是很重要的。它们包含了一些重要的安全和性能上的提升。1.0x 这样的小布丁，比如 1.32 到 1.3.3，就没那么重要。Prysm 的 v1.0.0 后的版本有很多升级，鉴于安全与性能问题，我们强烈推荐你们尽快升级。如果你担心新版本的漏洞，它们在下一版本肯定会被修复的，因此你可以在一个新版本出来后的一两周更新。\n\n<br/>\n\n# Q:\n\nPrysm，你们是不是一旦重启进程就会自动更新最新版本？我明明不想升级，却总是被动升级。。。\n\n### Raul:\n\n\n如果你是使用 [prysm.sh](http://prysm.sh) 的话，是的。如果你倾向于手动升级的话，我们建议你下载并运行我们的二进制文档，你需要的版本在这里：[Releases · prysmaticlabs/prysm · GitHub](https://github.com/prysmaticlabs/prysm/releases)，例如，你应该下载beacon-chain-v1.3.3-linux-amd64 和 validator-v1.3.3-linux-amd64，运行那些二进制文档而不是  [prysm.sh](http://prysm.sh)。如果你不升级的话，你就会一直维持这个版本。\n\n<br/>\n\n# Q：\n\n在中国我接触到的大部分人群都是用云服务器运行节点，少部分使用个人电脑；海外树莓派运行节点的情况怎么样，使用的人多吗？运行性能如何？\n\n\n### Raul:\n\n\n有些用树莓派的目前还ok，但这不代表你使用 Prysm 的话会有最佳体验。我们建议的最低配置是：\n\n- 操作系统：4-bit Linux、Mac OS X 10.14+、Windows 64-bit\n- 处理器：Intel Core i5–760 或 AMD FX-8100 或更好的\n- 内存：8GB RAM\n- 存储: 20GB可用的固态硬盘\n- 网络: 宽带连接\n\n<br/>\n\n# Q：\n\n中国质押者对客户端的一些建议 (收集自微信)\n\n1. 改善Windows用户体验 (LH没有提供Windows)\n2. Prysm资源管理不佳优待改进，有时会跑满偶尔时钟会漂移。\n3. 希望客户端可以自带成为系统服务的能力，这样能减少人的干预，使得更多个人电脑及外圈用户加入验证人。\n4. 现在大部分客户端对Windows和安卓支持不佳，支持多操作系统有利于去中心化。\n\n\n### Raul:\n\n这些反馈很棒，也是我们打算完善的内容。我们很看重 Windows系统，但还有很大的空间可以简化用户体验。\n\n### Paul:\n\n非常好的反馈，感谢[@Esther](https://forum.weeth.org/u/esther)。\n\n> 改善Windows用户体验\n\n\nLighthouse 目前只有通过 WSL 才支持 Windows 系统。我们当然会计划开发本地支持 Windows 系统，但它涉及的工作量特别大，我们目前还没有一名开发者可以负责这项工作。如果谁看到这里、有 Rust 开发经验的、且愿意帮忙接入 Windows 系统的，非常乐意收到你的信息。\n\n> 希望客户端可以自带成为系统服务的能力，这样能减少人的干预，使得更多个人电脑及外圈用户加入验证人。\n\n\n我是用 `systemd`来管理我们的 Lighthouse 用例。我应该把这些脚本都写入我们的文档里。\n\n<br/>\n\n# Q:\n\n你们有开发移动端的打算吗？\n\n### Paul:\n\n\n\nNimbus 一直从事这方面的开发。我记得他们去年有在安卓上运行一个信标节点。我不确定它现在是不是产品级。\n\n<br/>\n\n# Q:\n\n\n\nHi，我是新手！我想质押 32 ETH 并成为 2.0 网络的一名验证者。我已经通过本地 eth1 节点在 goerli 测试网做了测试，并计划在主网上质押。Eth1 goerli 测试网同步速度很快，因为其网络数据负载很低。但是主网的巨大数据负载 (超过 800G) 是否会降低 eth1 和 eth2 节点之间的同步速度，导致验证失效？顺便说一下，我来自中国，我不确定是否可以保持一个稳定的网络连接。\n\n### Raul:\n\n\n\n同步 eth1 节点很困难，但是一旦完成了同步，运行 eth2 节点应该不会有很多问题。Eth1节点仅用于处理存款合约中的验证者存款。现在，Prysm 仍在使用 eth1 节点从创世存款的清单中“生成” eth2 创世状态。而在将来是不需要这样做的，因为我们将打包 eth2 创世状态到你实际运行的软件中。\n\n如果你的 eth1 连接断开了，你仍可以创建证明。然而，你所生产的任何包含 eth1 存款的区块都会失效。\n\n### Paul:\n\n\n主网 eth1 的数据确实比 Goerli 测试网的大很多，但是从 eth1/eth2 通信的角度来看，它们几乎相同。\n\n\n对于问题 (1)，我建议你先尝试仅运行一个主网 eth1 节点 (如 geth) 和一个主网 eth2 信标节点 (如 lighthouse)，然后观察其运行情况。如果运行良好并且有足够的 CPU 和 RAM，那么再添加几个验证者就不会有任何问题。如果要运行 16 个以上验证者节点，则请尝试使用 flag  `--subscribe-all-subnets` 和  `--import-all-attestations` 运行你的 Lighthouse 节点。这将模拟单个信标节点可以消耗的最大负载，如果你的硬件可以承载的话，这证明它非常不错。访问此条链接以查看关于这些 flags 的更多信息：https://lighthouse-book.sigmaprime.io/redundancy.html#resource-usage-of-redundant-beacon-nodes\n\n\n<br/>\n\n\n# Q:\n\n另一个关于prysm的问题：在使用Prysm推荐的Grafana来展示节点数据的时候，不知道是不是公共数据的api还没出还是我看漏了，有些关于slot和Epoch状态的信息找不到。\n\n想问一下，你们的api是不是只是支持个人节点数据展示？或者你们有没出中文版api文档的打算呢？\n\n\n\n### Raul:\n\n\nPrysm 客户端的话，关于信标节点的所有可用参数：http://localhost:8080/metrics ；https://localhost:8081/metrics 每一个都会有注释解释。如果想要获取当前 slot 的状态，我们的参数为：\n\n\n至于显示网络的其他相关数据，Prysm 客户端展示的仅限于你所运行的节点的信息。比如，我们不能区块浏览器一样展示“全网”的参数，因为单个节点并不保存网络的全部数据。\n\n至于你说的中文 API 文档，我们还没有这样计划，但是我很想把这个做起来！我们可能会在接下来的几个月推出一个赏金计划，让社区成员来帮助我们编写中文文档。\n\n### Paul:\n\n\nLighthouse 通过 Prometheus 将当前的 slot 状态展示为 `slotclock_present_slot` 。你可以用这个除以 32 得出当前的 epoch 信息。\n\n\n\n<br/>\n\n# Q:\n\nNimbus 的最新版本添加了集成 rocket pool 的功能，Lighthouse 和 Prysm 怎么看 rocket pool 和 DappNodeDao 这种去中心化的质押池？以后也会集成吗？\n\n\n\n### Paul:\n\n\nLighthouse 几年来和 Rocket Pool 一直保持紧密的联系 (我们都是澳大利亚的团队)。我认为他们现在已经支持 Lighthouse。\n\n我不太熟悉 DappNodeDao，但是我知道 DappNode。我们现在在进行用户界面的工作，应该能看到 Lighthouse 受 DappNode 的支持。\n\n我认为 Lighthouse 无需太过关注哪一个质押池，如果我们的客户端架构足够灵活，那么任何人都可以在其质押池中应用。这是我们的目标。\n\n<br/>\n\n# Q:\n\nHello，请问怎么看待近来以太坊矿工对EIP 1559越来越强烈的反对声音？如果矿工真的进行“算力迁移”，会不会对以太坊网络造成威胁？开发者是否做好支持EIP 1559的准备了？\n\n\n### Raul:\n\n\nEth1 会在不久的将来与 eth2 合并，这一旦实现，矿工就无法对以太坊造成威胁了。我很遗憾他们发起了“算力迁移”对抗，因为这会在社区中制造更大的压力和负面情绪，这也会对他们产生影响。\n\n<br/>\n\n# Q:\n\n怎么看待[beaconcha.in](http://beaconcha.in)浏览器上的effectiveness参数？它是根据验证人节点最新区块的接收速度计算，还是根据历史数据来计算？如何能够提高effectiveness？\n\n为什么我看有时候节点的delay非常高，但收益还是非常稳定并没有降低（始终是0.00003ETH）？如果其实effectiveness并不影响收益的话，到底还应不应该关注它？\n\n\n### Paul:\n\n\n我不是很了解 [beaconcha.in](http://beaconcha.in) 上的 effectiveness 参数是怎么得出的。它们很有用，我建议你问他们。\n\n但是，我们自己有很多奖励分析，我可以告诉你我计算哪些参数。所有这些参数都会影响验证者收益：\n\n1. **打包延迟(Inclusion delay)** ：一份证明需要多少个 slot 才能打包到区块？\n2. **区块链头投票 (Head vote)**：证明的 `data.beacon_block_root` (信标区块根数据) 是否指向正确的区块？\n3. **目标检查点投票 (Target vote)**：证明的 `data.target.root` (目标检查点根数据) 是否指向正确的区块\n4. **来源检查点投票 (Source vote)**: 证明的 `data.source.root` (来源检查点根数据) 是否指向正确的区块。\n\n\n如果来源检查点投票  (4) 是错的，证明将无法被打包到区块，且会被认为是“漏打包的”。而其他三个值 （1、2、3）都直接影响奖励，对于追求收益的验证者来说它们是最重要的。\n\n最近我在 Lighthouse 做了大量工作来确保我们的验证者能获得最多的奖励。你们可以看看这篇文章：[Lighthouse Update #34](https://lighthouse.sigmaprime.io/update-34.html)\n\n尽管我说我不知道  [beaconcha.in](http://beaconcha.in) 是怎么计算出这些奖励的，我觉得他们会分析部分 (如果不是全部的话）我提到的这些参数 。随着时间推移，把它们浓缩成一个百分比是有点难度的，这期间可能会丢失一些信息。\n\n如果你使用的是Lighthouse，你可以在你的  [Validator Monitor](https://github.com/sigp/lighthouse-metrics/blob/master/dashboards/ValidatorMonitor.json) (验证者监测器) 仪表盘上看以上指标。我们未来几个月内推出的 UI 更新会包含这些数据。\n\n<br/>\n\n# Q:\n\n你觉得多客户端的优越性在哪里？\n\n有人说四个客户端可以保障网络的稳定性，但是如果一个客户端挂掉，四分之一网络甚至更高（因为有的客户端更主流，使用率更高）瘫痪依然对以太坊网络是不小的冲击；而如果只有一个客户端，挂掉的话我们可以重启或者回滚。\n\n\n### Raul:\n\n\n多客户端之所以重要是因为如果其中一个客户端出现严重漏洞，且这个客户端控制了链上大多数节点的话，可能会由于共识代码上的漏洞而出现错误的链分叉。重启软件不会有帮助。\n\n### Paul:\n\n\n\n多客户端有很多好处：\n\n1. 仅一个漏洞是不太可能让网络瘫痪的。\n2. 如果一个团队作恶、被攻击、或退出了，在他们的问题解决前我们可以依靠其他的实现。\n3. 每个团队可以带来不同的东西，而这些东西我们是共享的。例如，一些客户端专注于吸引用户，而有些专注于优化。\n4. 用不同语言编写的多种实现意味着我们创建的工具或代码库可以被更多人使用。例如，当我们有Java 语言的实现时，以 Java 为主的程序员或组织能更容易地参与进来。\n\n> 如果只有一个 eth2 客户端的话，挂掉的话我们可以重启或者回滚。\n\n如果我们想的话，多客户端也可以做到这点。但是，当有多个客户端时，我们还可以恢复网络而无须回滚。\n\n<br/>\n\n# **Q:**\n\nHi~虽然pow和pos是不同的机制，但对于客户端来说，eth1的客户端已经相对成熟了，请问你们在开发的时候有需要借鉴eth1 客户端的情况吗？是哪些方面？\n\n\n\n### Raul:\n\n\nEth1 客户端确实更为成熟。所幸的是，Prysm 是用 Go 语言写的，我们可以从 go-ethereum 客户端中获得一些关键的经验，比如说如何处理以太坊中的硬分叉。但是除此之外，由于我们的系统在本质上是不同的，所以我们并没有直接使用其中的很多代码。另外，我们发现构建 eth2 时有机会为将来编写比 eth1 中既有的一些代码更易于维护且可读性更高的代码。Prysm 最初是分叉于 go-ethereum，但是我们发生了非常大的变化，以至于几乎我们的所有代码都没办法共享，因此我们创建了自己的项目。 目前我们使用的 go-ethereum 的东西仅仅是一些用于处理十六进制、eth1日志和智能合约 ABI 接口的助手程序库和代码。\n\n### Paul:\n\n\nLighthouse 一开始的确是研究了 OpenEthereum 和 Substrate ，但我们最后并没有直接从它们身上拿很多东西。OE 在很久之前就被开发出来了，他们对 Rust 的使用比较过时。 Substrate 的使用则更简练和现代，但它们专注于灵活度，这是我们不需要的 (我们只想在一条特定区块链上运行，而不是多条区块链)。\n\n我们与 Substrate 和其他项目共享一个网络代码库 (`rust-libp2p`)，因此我们的确在那里共享代码。\n\n<br/>\n\n# Q:\n\n为什么大部分的PoS Staker都支持1559？他们和PoW矿工有什么不同\n\n\n### Raul:\n\n\nEth2 质押者非常关心以太坊网络的长期健康、可持续性、以及它的经济政策。更低的发行量对质押者来说是一件好事，因为它让 ETH 更稀缺，也有利于网络的整体健康。我认为质押者与矿工的最大区别在于很多矿工群体已经发展成大公司，在世界各地形成规模经济，他们的关注点落在了挖矿所需的硬件与如何将成本降到最低。质押者只有资本成本，且可以身处世界任何地方，没有对便宜电力的需求。我相信，在权力分散这一点上， 现在的 eth2 比 PoW 更去中心化。\n\n<br/>\n\n# **Q:**\n\nEIP1559和不断增长的质押规模会使ETH进入低通胀甚至通缩状态（现在质押的ETH总量不到流通量的3%），这些对以太坊pos（比如说持币者的质押倾向）可能产生什么潜在的影响？你们对staking规模有自己的预期吗？\n\n<br/>\n<br/>\n\nECN的翻译工作旨在为中国以太坊社区传递优质资讯和学习资源，文章版权归原作者所有，转载须注明原文出处以及ethereum.cn，若需长期转载，请联系eth@ecn.co进行授权。\n","cover":{"childImageSharp":{"resize":{"src":"/static/075eef4088e070267d469a6e6ea149f5/2244e/69c5801328c515302c8ba16ccffc9bf6.jpg"}}}},"site":{"siteMetadata":{"title":"Ethereum Community Network","description":"以太坊——全球的、开源的去中心化应用平台。DeFi？NFT？游戏？虚拟世界？每一个人都可以成为以太坊的开发者和用户！","author":"@ECN以太坊社区网络","keywords":"以太坊,以太坊中国,Ethereum","siteLanguage":"zh-CN","siteLocale":"zh-cn","siteUrl":"http://ethereum.cn","twitterUsername":"@EthereumCN"}}},"pageContext":{"id":"Articles_224"}},"staticQueryHashes":["1238767529","2940180826"]}