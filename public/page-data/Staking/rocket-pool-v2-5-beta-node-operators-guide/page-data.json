{"componentChunkName":"component---src-template-article-js","path":"/Staking/rocket-pool-v2-5-beta-node-operators-guide","result":{"data":{"strapiArticles":{"title":"Rocket Pool v3.0 Beta — 节点运行指南","summary":"Rocket Pool 节点运行的安装和设置教程","publishDate":"2021-04-21","author":"Jake Pospischil","authorImg":{"childImageSharp":{"fixed":{"src":"/static/97a8848afd1bc2ad72dd8a21f7bdb67d/1e5af/f66ef2c624451855d0e7602074cc6b89.jpg"}}},"content":"![rocketpool](https://i.ibb.co/gRZVW9y/rocketpool.png)\n\n<br/>\n\n# 介绍\n\n想要在 Rocket Pool v3.0 beta 测试版本中运行一个[智能节点](https://rocket-pool.readthedocs.io/en/latest/rocket-pool/nodes.html)吗？本指南将指导读者们如何做！现在参与运行节点，将成为 Rocket Pool 网络的第一批节点运行者，并且不仅从自己质押的那份金额中赚取奖金，还可以通过帮其他质押用户运行节点赚取佣金。\n\n如果读者只是想以最简单的方式质押 ETH 而不需要运行节点，请阅读我们的《[质押者指南](https://medium.com/rocket-pool/rocket-pool-v2-5-beta-stakers-guide-b6e85145175e) 》。\n\n本指南是关于安装和设置过程的快速概述 —— 更多详细的文档请看[智能节点文档](https://rocket-pool.readthedocs.io/en/latest/smart-node/getting-started.html)。\n\n发布后的测试版本带有一个用于管理节点的 CLI (命令行界面) 客户端，因此假设使用该指南的读者对终端有基本的认识。在后面的阶段将会推出一个 GUI 客户端，因此如果终端的问题吓到你了，现在开始留神了！\n\n**注意：在 Rocket Pool 网络中运行节点是需要长期承担责任的，就像运行 Eth 2.0 验证者节点一样。我们希望该测试版能够尽可能地模拟真实情况，因此如果你没有做好 24 小时在线的准备，请不要运行节点，因为这会降低 Eth 2.0 Pyrmont 测试网的参与率，也会影响 Rocket Pool beta 用户的收益率。**\n\n**注意：考虑到其他用户会尝试在 Pyrmont 测试网中运行验证者节点，请不要在你的节点下创建超过两个 minipool。质押大笔押金意味着等待激活队伍会很长，那么排队的用户需要等很久才可以加入网络了！**\n\n**注意：该 beta 版本完全在测试网上运行，也就是说不需要质押“真实的” ETH。参与测试时，千万不要尝试使用“真实的” ETH。**\n\n<br/>\n\n# 运行节点需要什么？\n\n你需要一台具有 x86_64 处理器的计算机 (就算不知道这是什么也不用担心！) 来运行某种操作系统 (如 Linux 发行版或 MacOS)。你还需要一个至少 16 GB 的 RAM 和一个拥有 200 GB 可用空间的 SSD  硬盘，以及对计算机的 root (管理员) 访问权限。\n\n**由于时间同步问题，非常不建议在 [Windows 10 WSL](https://docs.microsoft.com/en-us/windows/wsl/install-win10) 上运行节点，这会对 Eth2.0 客户端造成影响。不支持在 WSL  上运行一个节点 —— 自行承担后果。**\n\n如果你的设备没有达到上述规范的要求，查看我们的简易指南：《[在 AWS 上运行 Rocket Pool 智能节点](https://medium.com/rocket-pool/rocket-pool-smart-nodes-on-aws-c4d45fa5c9ad)》。\n\n<br/>\n\n# 安装客户端\n\n首先，我们将需要安装 Rocket Pool 智能节点客户端。如果你使用的是 AWS 指南，请跳过这一步。这可以[手动](https://github.com/rocket-pool/smartnode-install/releases)完成，也通过 cURL 或 wget 完成；尝试输入以下命令，看看有哪些工具可用：\n\n```Powershell\n   xxxxxxxxxx curl --versionwget --version\n```\n\n(如果你没有安装这些工具， 会显示这样的代码：`command not found: curl`)。现在，取决于你使用的操作系统，运行下列中合适的命令行以安装客户端：\n\n## Linux (cURL):\n\n```\ncurl -L https://github.com/rocket-pool/smartnode-install/releases/latest/download/rocketpool-cli-linux-amd64 --create-dirs -o ~/bin/rocketpool && chmod +x ~/bin/rocketpool\n```\n\n## Linux (wget):\n\n```\nmkdir -p ~/bin && wget https://github.com/rocket-pool/smartnode-install/releases/latest/download/rocketpool-cli-linux-amd64 -O ~/bin/rocketpool && chmod +x ~/bin/rocketpool\n```\n\n## MacOS (cURL):\n\n```\ncurl -L https://github.com/rocket-pool/smartnode-install/releases/latest/download/rocketpool-cli-darwin-amd64 -o /usr/local/bin/rocketpool && chmod +x /usr/local/bin/rocketpool\n```\n\n\n## MacOS (wget):\n\n```\nwget https://github.com/rocket-pool/smartnode-install/releases/latest/download/rocketpool-cli-darwin-amd64 -O /usr/local/bin/rocketpool && chmod +x /usr/local/bin/rocketpool\n```\n\n\n然后简单地启动一个新的 shell 会话 (或者运行 `source .profile`)。如果你使用 zshell，你可能需要调整你的 `.zshrc` 或 `.zprofile` ，然后首先将 `~/bin` 添加至你的 `PATH` 中。\n\n完成之后，运行 `rocketpool` —— 如果一切正常，你将看到一个 ASCII Rocket Pool logo 和一系列选项。如果没有看到，尝试重启并再次登录。\n\n<br/>\n\n# 安装服务\n\n现在，我们现在将正确安装智能节点服务：\n\n```\nrocketpool service install\n```\n\n\n如果你正使用 Ubuntu、Debian、CentOS 或者 Fedora，将会在你的系统上自动安装 [Docker Engine](https://docs.docker.com/engine/install/) 和 [Docker Compose](https://docs.docker.com/compose/install/)。否则，你将会收到手动安装的提示 —— 照做，然后输入代码 `rocketpool service install -d`。\n\n下一步，重启你的终端 (以便更新用户权限之后，能够与 Docker 交互) 然后设置你的服务：\n\n```Powershell\nrocketpool service config\n```\n\n\n你将需要选择运行一个 Eth1.0 客户端和 Eth2.0 客户端。如果你喜欢的话，也可以使用 [Infura](https://infura.io/) 代替运行 Eth1.0 客户端；你将需要注册一个账户、创建一个项目、并在出现提示时复制粘贴其 ID。请注意，如果你使用免费的 Infura 账户，可能会超过每日请求限制。**因此，为了获得最大化的稳定性，最好使用 Geth。**\n\n最后，启动服务：\n\n```Powershell\nrocketpool service start\n```\n\n\nDocker 将确保服务持续运行，即使它崩溃了或者你重启电脑了，它都会持续工作，除非你明确地停止它的工作。同步 Eth1.0 和 Eth2.0 链需要花些时间，但同时你仍然可以创建钱包以保存你的节点账户和验证者密钥。\n\n现在，检查你的客户端和服务版本，确保一切都是正常的：\n\n```Powershell\nrocketpool service version\n```\n\n\n会显示这样的代码：\n\n```Powershell\nRocket Pool client version: 1.0.0-beta.X\nRocket Pool service version: 1.0.0-beta.X\n```\n\n\n通过以下方式查看智能节点服务的资源消耗情况：\n\n```Powershell\nrocketpool service stats\n```\n\n或者，输入以下代码查看 Eth 客户端的运行情况 (e.g. 检查同步状态)：\n\n```Powershell\nrocketpool service logs eth1\nrocketpool service logs eth2\n```\n\n(这两个命令行都将实时运行，直到你按 Ctrl-C 停止。)\n\n**注意：你可能会发现你的验证者服务器不断重新启动，直到你拥有一个活跃的质押 minipool。这不会影响你的节点性能，可以放心地忽略它。**\n\n## 转发对等节点发现端口\n\n你还可以选择从你的路由器转发 Eth1.0 和 Eth2.0 客户端的对等节点发现端口。但你也可以选择不这么做，这可能会增加同步时间，因为你可能会连接到网络上的更多节点。如果你跟着 AWS 指南操作，你已经做到这一点了：\n\n你的 Eth1.0 和 Eth2.0 客户端要转发的端口分别是：\n\n```Powershell\n30303 (TCP & UDP)\n9001 (TCP & UDP)\n```\n\n\n请注意，Eth2.0 客户端使用各种不同的默认端口，但是 Rocket Pool 将其标准化为 `9001`，以便更容易地配置服务。\n\n转发端口的方法取决于你的路由器，本指南不囊括其中的方法。请参阅你使用的路由器型号的相关文档。\n\n<br/>\n\n# 注册节点\n\n\n在注册 Rocket Pool 的节点之前，你将需要创建一个钱包来保存你的节点账户和验证者密钥。如果你已经参与了之前的测试，务必先删除你的旧钱包和验证者密钥：\n\n```Powershell\nsudo rm ~/.rocketpool/data/wallet\nsudo rm -r ~/.rocketpool/data/validators\n```\n\n\n然后，继续创建一个新的钱包：\n\n```Powershell\nrocketpool wallet init\n```\n\n\n你会收到提示，设置一个钱包密码。然后就会看到你的钱包备份助记词，将其记录在安全且私密的地方，因为如果你丢失了钱包，助记词可以帮助恢复钱包以及它的所有密钥 (甚至是将来创建的密钥)。完成之后，你会看到新创建的节点账户的地址。\n\n这时候，你将需要等到你的 Eth1.0 客户端同步完才能进行下一步。让服务日志运行着，并稍后再返回，这可能会需要一两天 (除非你使用的是 Infura)。\n\n一旦你的 Eth1.0 客户端同步完成，你将需要一些 Goerli ETH 和 RPL 来注册 Rocket Pool 节点并开始存款。找到你的节点地址：\n\n```Powershell\nrocketpool node status\n```\n\n获取 Goerli ETH 的水龙头：\n\n- [ethstaker Discord server](https://discord.gg/GGGmqZdCBf)\n- [faucet.goerli.mudit.blog](https://faucet.goerli.mudit.blog/)\n\n\n获取了 Goerli ETH 之后，等待你的交易被打包，并确认你的余额已更新：\n\n```Powershell\nrocketpool node status\n```\n\n\n现在你可以通过 Rocket Pool 命令行直接从水龙头请求获取一些 RPL：\n\n```Powershell\nrocketpool faucet withdraw-rpl\n```\n\n\n请注意，这一步需要付 0.5 Goerli ETH 的费用，以防大家滥用水龙头。你将收到一定量的旧版 RPL，可以交换成新版 RPL 代币，并且将其质押以启动 minipools。\n\n\n**如果你在 beta 测试版发布前就准备好了，停在这一步并过一段时间再来！**\n\n\n最后，注册你的 Rocket Pool 节点：\n\n```Powershell\nrocketpool node register\n```\n\n你的时区位在默认的情况下会被自动检测，然后发送到网络。然而这是可选的，而且并不是用于 KYC，只是为了使得 Rocket Pool 网站上的节点网络图保持更新。如果你正运行一个远程服务器，发送服务器的时区位置。如果你想要隐藏位置，只需输入 `Hidden/Hidden`。\n\n这样你就正式加入 Rocket Pool 网络了！\n\n<br/>\n\n# 质押\n\n现在，在 Rocket Pool 中质押 RPL：\n\n```Powershell\nrocketpool node stake-rpl\n```\n\n\n你会收到这样的提示：是否需要将你的旧版 RPL 转换成新版 RPL再质押。点击确认，然后输入你需要质押的数量，如果你不确定，选择\"所有的 RPL 余额\"。\n\n\n\n下一步，我们将开始质押：\n\n```Powershell\nrocketpool node deposit\n```\n\n\n选择一定数量的 ETH 进行质押。\n\n如果你质押 32 ETH，你的 minipool 就会立即将其余额提交至信标链中，以便尽快开始质押。\n\n```Powershell\nrocketpool minipool refund\n```\n\n\n如果你质押 16 ETH，你的 minipool 需要在队列中等待收集够了 ETH，才能将其余额提交至信标链。\n\n接下来，你会看到当前网络的节点佣金率 (基于节点的供需变化)，以及根据你的质押金给出的最低佣金率建议。这将与你的质押交易一起发送，这样做的话，即便在交易被打包前佣金率突然下跌，你也不会受到影响——如果这种情况发生了，你的质押交易将只会失败。如果你不接收建议的佣金率，你可以自定义输入，但是你的交易可能不会被打包。\n\n完成之后，你将收到存款成功的提示，以及你新创建的 minipool 的地址。\n\n<br/>\n\n# 管理 Minipools\n\n你可以随时输入以下代码以检查 minipools 并查看其所有重要详细信息：\n\n```Powershell\nrocketpool minipool status\n```\n\n如果你的 minipool 即使有 32 ETH，仍然出现在“预启动”的清单中，也不用惊慌。你的节点可能需要几分钟才能注意到你有一个 minipool 正在等待启动，并且为其生成并提交验证者密钥。\n\n当你的 minipool 出现在 “Staking” 列表中时，恭喜，这表示其存款已经发送到信标链中，并即将开始验证！此时，智能节点服务将耐心等待，随时准备执行验证任务。\n\n如果你想要查看关于验证者的更详细的信息，我们建议去浏览器 [beaconscan](https://beaconscan.com/pyrmont) 或者 [beaconcha.in](https://pyrmont.beaconcha.in/) 查看。只需将 `rocketpool minipool status` 输出中的 **Validator pubkey** 复制粘贴至任意其中一个网站的搜索栏中，即可查看其运行情况。如果暂时没有结果，不用担心，信标链可能要花几个小时才能显示结果。\n\n\n现在你可以坐下来并观察你的验证者余额增加，方法是定期运行 `rocketpool minipool status` ，或者在 [beaconscan](https://beaconscan.com/pyrmont) 上查看。如果你怀疑你的验证者节点出现问题 (例如，余额下降)，查看信标和验证者日志：\n\n```Powershell\nrocketpool service logs eth2\nrocketpool service logs validator\n```\n<br/>\n\n# 更多内容!\n\n这就是本指南的全部内容。如果你想了解智能节点还能做些什么，请查看我们的[智能节点文档](https://rocket-pool.readthedocs.io/en/latest/smart-node/introduction.html)。文档里将为你分析所有可用的命令行，并在最后提供了参考。\n\n<br/>\n<br/>\nECN的翻译工作旨在为中国以太坊社区传递优质资讯和学习资源，文章版权归原作者所有，转载须注明原文出处以及ethereum.cn，若需长期转载，请联系eth@ecn.co进行授权。","cover":{"childImageSharp":{"resize":{"src":"/static/e63847d571e0bf0b427f9b51e3b372a0/497c6/819e0aa8f0aef796794250c3a516849c.png"}}}},"site":{"siteMetadata":{"title":"Ethereum Community Network","description":"以太坊——全球的、开源的去中心化应用平台。DeFi？NFT？游戏？虚拟世界？每一个人都可以成为以太坊的开发者和用户！","author":"@ECN以太坊社区网络","keywords":"以太坊,以太坊中国,Ethereum","siteLanguage":"zh-CN","siteLocale":"zh-cn","siteUrl":"http://ethereum.cn","twitterUsername":"@EthereumCN"}}},"pageContext":{"id":"Articles_248"}},"staticQueryHashes":["1238767529","2940180826"]}