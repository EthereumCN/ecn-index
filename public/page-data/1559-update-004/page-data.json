{"componentChunkName":"component---src-template-article-js","path":"/1559-update-004","result":{"data":{"strapiArticles":{"title":"EIP1559的状态更新#4","summary":"1559的正式经济学分析出炉，主网级容量的测试网搭建中","publishDate":"2020-12-25","author":"Tim Beiko ","authorImg":{"childImageSharp":{"fixed":{"src":"/static/e7355d96c1886baceafee7ec2aa095af/07ab6/6ec484f449cc13afd6542fab8670c2c3.jpg"}}},"content":"来源 | [The State of 1559](https://hackmd.io/@timbeiko/1559-updates/https%3A%2F%2Fhackmd.io%2F%40timbeiko%2F1559-update-004)\n\n<br/>\n\n# 概要 👀 \n\n- 我们现在已经有了一份详细的EIP-1559的经济学分析了;\n- 我们正在搭建主网级容量的测试网，以分析1559在大型网络上的性能;\n- 对于解决由不断变化的`BASE FEE`引起的交易池问题，我们已取得了进展\n- 我们有了新的模拟，来分析遗留交易的行为以及在一个单一网络上的1559式交易;\n- OpenEthereum正在招聘一名专注在1559的全职工程师!\n\n<br/>\n\n# 经济学分析📑\n\n在2020年12月，前沿的博弈论与计算机科学研究员[Tim Roughgarden](http://timroughgarden.org/)发表了一份50多页的EIP-1559经济学分析。他在推特和报告的第一部分写了报告的要点，但还是很值得在此完整分享一次：\n\n\n\n![经济学分析](https://i.ibb.co/HtvXv5J/cUtP6Tm.png)\n\n\n\n\n过去，对1559的批评经常提到它欠缺一份正式的经济学分析，他们认为1559依赖的只是对以太坊交易费用市场的直觉。这份报告为EIP-1559提供了一个详尽的、总体上正面的分析。它甚至好像说服了一些著名的1559怀疑论者，比如[Nick Johnson](https://twitter.com/nicksdjohnson/status/1334277446833618945) 🎉!\n\n\n此份报告强调了1559的一些地方是值得进一步思考的，即那些矿工可能合谋的情况 [0]，以及对基本费用更新规则进行更好的分析。[第7次EIP-1559实现者会议](https://github.com/ethereum/pm/issues/226)对矿工合谋场景进行了讨论，但没有得出确切的结论。而在基本费用更新规则方面，[我在Twitter上对这方面的专家发起了呼吁]((https://twitter.com/TimBeiko/status/1334288252912582656))，有一些人已经联系我，希望能提供帮助 :muscle:。\n\n\n\nRoughgarden还提到，他希望以太坊社区可以最大程度利用这份报告，而且如果任何人有疑问、评论或担忧，他们都可以联系他。[他的网站](http://timroughgarden.org/)列出了他的各种联系方式。\n\n<br/>\n\n# 大型状态测试网📈\n\n\n如在之前的更新里讨论到的，对EIP-1559进行测试的下一个里程碑式在与主网相仿的条件下做测试。考虑到的第一个方法是真的在主网分叉出一个网络，降低难度然后在上面启动EIP-1559。尽管这可以给我们一份主网状态，但考虑到安全问题，这个想法还是被否决了 [1]。\n\n\n相反，Besu团队一直在构建一个[大型状态测试网生成器](https://github.com/abdelhamidbakhta/tommygun-eth)。生成器把大量账户和储存slot作为输入，开启一个名为\"whale\"的智能合约，让它发送少量的ETH，并为每个输入创建一个存储slot[2]。在第7次EIP-1559实现者会议里有一个完整的演示，从[1:16:00](https://youtu.be/dopljpI59Rw?t=4560)开始。这是该工具运作时的截屏:\n\n\n\n![生成器](https://i.ibb.co/K5WRX38/image.png)\n\n\n\n\n主网现在有大约1亿个账户，因此我们最近一次运行该工具，创建了一个有1亿账户和储存slot的网络。这个过程需要大概4天的时间，所需数据库容量大约240GB。随着网络容量的增长，创建网络的时间几乎成指数型增长，一个100k容量网络所需的时间是一个10k容量网络的2倍，一个1M容量网络所需的时间是一个100k容量网络的10倍，一个10M容量网络所需的时间比一个1M容量网络长15倍，一个100M容量网络所需的时间比一个10M容量网络长40倍！\n\n\n现在有了这个数据库，我们将尝试把所有客户端实现同步到这个网络，然后用我们之前构建的[交易生成工具](https://github.com/ConsenSys/eip1559-tx-sender) 对网络进行交易轰炸。这样，我们就可以深入了解客户端在必须管理主网级容量的状态时，如何在1559的规则下顺滑地处理200%满的区块。\n\n<br/>\n\n# 交易池🏊‍♂️\n\n\n在之前的更新里，我们讨论了一些与交易池管理相关的重要问题，它们还有待解决。我在[一个文档里](https://hackmd.io/unbJUt-HQgStvwmpLPsXsQ)对它们进行了解释，但它的要点是由于区块间的`BASE FEE`不一样，以及交易会指定它们愿意支付的最高费用 (`FEE CAP`) 和矿工小费 (`TIP`)，一个矿工打包交易收到的费用会随`BASE FEE`的变化而变化，这意味着潜在需要节点来对每个区块的交易池进行重新整理，这是非常低效的。\n\n\nQuilt团队的[Ansgar](https://twitter.com/adietrichs)一直有关注这个问题，在第7次实现者会议他分享了一篇[关于这个问题的文章](https://hackmd.io/@adietrichs/1559-transaction-sorting)。\n\n\n简言之，有两个问题需要解决：矿工希望打包到区块的交易可以支付给他们最高的费用；非挖矿节点需要在它们的交易池满的时候有交易逐出的政策。\n\n\n尽管该文档没有针对这个问题提出解决方案，它强调了对矿工来说交易的一个有趣特点——不断变化的收益。在1559下，你可以想象交易有两个可能的“状态”。第一个状态是”恒定的“，即交易的`FEE CAP`是大于`BASE FEE`与`TIP`之和的，而矿工回获得整份 `TIP`。第二个状态时”变化的“，即`FEE CAP`仍然高于`BASE FEE`，但低于`BASE FEE`与`TIP`之和 [4]。在这种情况下，矿工获得的是`FEE CAP` 与`BASE FEE`的差值。\n\n\n当交易不处于这两种状态，你可以在它们之间创建一个相对秩序 (通过`TIP`分出”恒定“类的状态，通过它们的”有效小费“分出“变化”类的状态，例如：`FEE CAP` - `BASE FEE`)\n\n\nAnsgar文章的洞见在于“变化”类状态的交易将保存相同的区块间相对秩序，因为`BASE FEE`的增加/减少将对它们产生同样的影响。这意味着问题的核心在于当`BASE FEE`变化时能找到一个决定哪些交易从“恒定”转为”变化“的有效方法，以及如何恰当处理这些交易。\n\n\n希望在Quilt的下一篇文章里我们能得到这些问题的答案😁!\n\n<br/>\n\n# 模拟更新🤖\n\n\nNethermind团队发布了一篇[新的关于模拟的notebook](https://github.com/NethermindEth/research/blob/main/legacyTransactions.ipynb)，探讨了在网络里遗留交易与1559式交易间的相互影响，且遗留交易能被解释为1559式交易。这些研究都建基于 Barnabé Monnot及他的团队之前做的[模拟成果](https://github.com/barnabemonnot/abm1559#abm1559)。\n\n这个模拟引入了三种类型的用户：天真的1559用户，他们总是把他们的`TIP`射到最低值；聪明的1559用户，他们会根据网络使用情况策略性地设置他们的`TIP`；聪明的遗留交易用户，他们会根据网络使用情况策略性地设置他们的`gas price`。\n\n对于每种类型的用户，都要发送固定数量的交易到网络里。那份报告分析了哪种类型的交易被打包了，那些用户支付了多少钱，以及用户最后等了多长时间。\n\n\n\n![模拟](https://i.ibb.co/YP6QY4G/image.png)\n\n\n\n\n\n\n该报告的”总结“部分不长，且很值得完整阅读，但我还是给出了概要：\n\n\n- 我们在模拟里看到两个清晰”阶段“：当`BASE FEE`聚集到它的均衡值的时候，以及当它是稳定的时候\n- 在`BASE FEE`不稳定的阶段，聪明的1559用户会发起被打包的大部分交易\n- 交易池的行为改变取决于我们在哪个”阶段“。当基本费用不稳定时，会有很多被逐出的交易以及需要重新整理交易池；但当它时稳定的时候，交易池只有非常少逐出的交易。\n\n\n当在实现者会议上讨论模拟的时候，出现了两个有趣的问题。\n\n第一，如果在网络上出现更多的遗留交易，`BASE FEE`有变得不那么稳定的风险，以及当那些阶段形成了采用1559式交易的激励时，1559式交易倾向于被优先打包。\n\n第二，随着1559式交易的使用不断增长，且 `BASE FEE` 变得稳定，遗留交易的预估gas价格会变得更准确，因为他们可以在预估中使用 `BASE FEE` 的值。换句话说，1559用户将有助于减少网络中gas价格的波动，缩小gas价格预估器估算值的置信区间。\n\n<br/>\n\n# 其他更新👀\n\n上面已经写了很多更新内容了，最后一点值得一提的是OpenEthereum正在招聘一个全职开发者来从事EIP-1559的工作🎉\n\n如果你对这个职位感兴趣，可以在[这里](https://boards.greenhouse.io/gnosis/jobs/4978262002?t=addc4e802)申请！\n\n<br/>\n\n# 后续工作 ✅\n\n\n这篇更新迟到了很多了！以下是我们接下来要忙的事：\n\n- 分享最近研发工作成果到社区，包括AllCoreDevs，以收集反馈；\n- 寻找专家为基本费用更新规则提供更好的分析\n- 把所有的客户端是实现同步到大型状态的测试网，并用交易生成器工具来测试在网络上的性能\n- 提出能对矿工和不挖矿节点的交易池进行分类的好算法\n\n\n感谢阅读😁\n\n------\n\n[0]  尽管在1559下这种情况不太可能，但这样的研究仍是有助益的。\n\n[1] 分叉主网以及在客户端上公开主网变量容易引来攻击与欺诈重演\n\n[2] 在后台，它是在发送ETH到 `0x0...1`, `0x0..2`, `0x0..3`等，并为`0x0..1`, `0x0..2`, `0x0..3`等制造储存条目，直到达到想要的账户与储存slot数量。\n\n[3] 该文档有以下免责声明：此文档主要作为接下来的实现者会议的讨论基础。之后会再出一份更详细的文章。因为Quilt团队最近才加入到EIP-1559的事业里，有可能我们有错误的假设或忽略了现有的相关工作。\n\n[4]  如果 `FEE CAP `低于`BASE FEE`，那么交易无法被打包到区块里。\n\n<br/>\n<br/>\n声明：ECN的翻译工作旨在为中国以太坊社区传递优质资讯和学习资源，文章版权归原作者所有，转载须注明原文出处以及ethereum.cn，若需长期转载，请联系eth@ecn.co进行授权。","cover":{"childImageSharp":{"resize":{"src":"/static/3f00fec4718c13a7079aa441acaaaa7b/2244e/00cc6eb4f88df65c0b3141c55d30adfe.jpg"}}}},"site":{"siteMetadata":{"title":"Ethereum Community Network","description":"以太坊——全球的、开源的去中心化应用平台。DeFi？NFT？游戏？虚拟世界？每一个人都可以成为以太坊的开发者和用户！","author":"@ECN以太坊社区网络","keywords":"以太坊,以太坊中国,Ethereum","siteLanguage":"zh-CN","siteLocale":"zh-cn","siteUrl":"http://ethereum.cn","twitterUsername":"@EthereumCN"}}},"pageContext":{"id":"Articles_194"}},"staticQueryHashes":["1238767529","2940180826"]}