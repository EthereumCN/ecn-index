{"version":3,"sources":["webpack:///./src/components/HomePageComponents/eachRow.module.css","webpack:///./node_modules/react-seo-component/dist/react-seo-component.esm.js","webpack:///./src/components/HomePageComponents/LastRow.js","webpack:///./src/components/HomePageComponents/News.js","webpack:///./src/components/HomePageComponents/Item.js","webpack:///./src/components/HomePageComponents/Selected.js","webpack:///./src/components/HomePageComponents/Eachrowitem.js","webpack:///./src/components/HomePageComponents/Eachrow.js","webpack:///./src/components/HomePageComponents/PhoneFirstRow.js","webpack:///./src/components/HomePageComponents/PhoneItem.js","webpack:///./src/components/HomePageComponents/PhoneSecondRow.js","webpack:///./src/components/HomePageComponents/PhoneButton.js","webpack:///./src/components/HomePageComponents/PhoneEachRow.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@chakra-ui/core/dist/es/Stack/index.js","webpack:///./src/components/css/hover.module.css","webpack:///./node_modules/@chakra-ui/core/dist/es/Heading/index.js"],"names":["module","exports","Facebook","_ref","url","type","title","desc","image","locale","createElement","property","content","Twitter","_ref$type","username","name","titleTemplate","titleSeparator","description","pathname","_ref$article","article","siteLanguage","siteLocale","twitterUsername","_ref$author","author","datePublished","dateModified","seo","slice","Date","now","toISOString","copyrightYear","getFullYear","schemaOrgWebPage","headline","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","itemListElement","item","position","schemaArticle","logo","push","breadcrumb","Fragment","lang","rel","href","JSON","stringify","LastRow","data","useStaticQuery","Thinking","nodes","Announcement","Activity","Flex","color","flexWrap","mt","justifyContent","mb","paddingY","borderY","flexDir","w","to","mainTag","Heading","as","fontSize","fontWeight","borderRadius","display","fontFamily","path","overflow","whiteSpace","textOverflow","Text","summary","Box","borderLeft","style","marginRight","News","news","allStrapiArticles","PseudoBox","cursor","_hover","pt","fluid","cover","childImageSharp","Item","order","h","minH","alignItems","alignSelf","H","paddingX","backgroundColor","chineseMainTag","Selected","Eachrowitem","mx","pb","maxW","px","lineHeight","letterSpacing","zIndex","Stack","isInline","fixed","authorImg","ml","publishDate","Eachrow","rowName","className","eachRow","rowsp","textAlign","gridColumn","hovStyle","ccc","PhoneFirstRow","size","PhoneSecondRow","PhoneButton","value","MotionBox","framerMotion","custom","marginY","bg","drag","dragConstraints","left","right","whileHover","scale","whileTap","PhoneEachRow","Index","Eth2","Layer2","Technology","Staking","DeFi","Eth1x","Ecosystem","site","siteMetadata","file","childrenImageSharp","src","publishedDate","lastBuildDate","modifiedDate","margin","ref","_direction","direction","_ref$isInline","_ref$isReversed","isReversed","children","align","justify","_ref$spacing","spacing","shouldWrapChildren","rest","_isReversed","endsWith","_isInline","startsWith","validChildrenArray","toArray","filter","map","child","index","_ref2","_ref3","isLastChild","length","spacingProps","d","key","sizes","xl","lg","md","sm","xs","_ref$size","props","displayName"],"mappings":"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","file":"component---src-pages-index-js-5ca78d423dbda35bd696.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowsp\":\"eachRow-module--rowsp--NEjsH\"};","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nvar Facebook = function Facebook(_ref) {\n  var url = _ref.url,\n      type = _ref.type,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image,\n      locale = _ref.locale;\n  return React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"og:locale\",\n    content: locale\n  }), React.createElement(\"meta\", {\n    property: \"og:url\",\n    content: url\n  }), React.createElement(\"meta\", {\n    property: \"og:type\",\n    content: type\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    property: \"og:image:alt\",\n    content: desc\n  }));\n};\n\nvar Twitter = function Twitter(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'summary_large_image' : _ref$type,\n      username = _ref.username,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image;\n  return React.createElement(Helmet, null, username && React.createElement(\"meta\", {\n    name: \"twitter:creator\",\n    content: username\n  }), React.createElement(\"meta\", {\n    name: \"twitter:card\",\n    content: type\n  }), React.createElement(\"meta\", {\n    name: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"twitter:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image:alt\",\n    content: desc\n  }));\n};\n\nvar SEO = function SEO(_ref) {\n  var title = _ref.title,\n      titleTemplate = _ref.titleTemplate,\n      titleSeparator = _ref.titleSeparator,\n      description = _ref.description,\n      pathname = _ref.pathname,\n      _ref$article = _ref.article,\n      article = _ref$article === void 0 ? false : _ref$article,\n      image = _ref.image,\n      siteLanguage = _ref.siteLanguage,\n      siteLocale = _ref.siteLocale,\n      twitterUsername = _ref.twitterUsername,\n      _ref$author = _ref.author,\n      author = _ref$author === void 0 ? 'J Doe.' : _ref$author,\n      datePublished = _ref.datePublished,\n      dateModified = _ref.dateModified;\n  var seo = {\n    title: title.slice(0, 70),\n    description: description.slice(0, 160),\n    datePublished: datePublished ? null : new Date(Date.now()).toISOString(),\n    dateModified: dateModified ? null : new Date(Date.now()).toISOString()\n  };\n  var copyrightYear = new Date().getFullYear(); // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n  // Structured Data Testing Tool >>\n  // https://search.google.com/structured-data/testing-tool\n\n  var schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: pathname,\n    headline: seo.description,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: pathname,\n    description: seo.description,\n    name: seo.title,\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightYear: copyrightYear,\n    creator: {\n      '@type': 'Person',\n      name: author\n    },\n    publisher: {\n      '@type': 'Person',\n      name: author\n    },\n    datePublished: seo.datePublished,\n    dateModified: seo.dateModified,\n    image: {\n      '@type': 'ImageObject',\n      url: \"\" + image\n    }\n  }; // Initial breadcrumb list\n\n  var itemListElement = [{\n    '@type': 'ListItem',\n    item: {\n      '@id': pathname,\n      name: 'Homepage'\n    },\n    position: 1\n  }];\n  var schemaArticle = null;\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightYear: copyrightYear,\n      creator: {\n        '@type': 'Person',\n        name: author\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: author,\n        logo: {\n          '@type': 'ImageObject',\n          url: \"\" + image\n        }\n      },\n      datePublished: seo.datePublished,\n      dateModified: seo.dateModified,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: pathname,\n      name: seo.title,\n      image: {\n        '@type': 'ImageObject',\n        url: image\n      },\n      mainEntityOfPage: pathname\n    }; // Push current blog post into breadcrumb list\n\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: seo.title\n      },\n      position: 2\n    });\n  }\n\n  var breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement: itemListElement\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: seo.title,\n    titleTemplate: \"%s \" + (titleSeparator ? titleSeparator : \"\\xB7\") + \" \" + titleTemplate\n  }, React.createElement(\"html\", {\n    lang: siteLanguage ? siteLanguage : 'en'\n  }), React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: pathname\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: seo.description\n  }), !article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaOrgWebPage)), article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaArticle)), React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumb))), image && React.createElement(React.Fragment, null, React.createElement(Facebook, {\n    desc: seo.description,\n    image: image,\n    title: seo.title,\n    type: article ? 'article' : 'website',\n    url: pathname,\n    locale: siteLocale ? siteLocale : 'en_gb'\n  }), React.createElement(Twitter, {\n    title: seo.title,\n    image: image,\n    desc: seo.description,\n    username: twitterUsername\n  })));\n};\n\nexport default SEO;\nexport { Facebook, Twitter };","import React from \"react\"\nimport { Flex, Box, Text, Heading } from \"@chakra-ui/core\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { FcPlanner } from \"react-icons/fc\"\n\nconst LastRow = () => {\n  const data = useStaticQuery(graphql`\n    {\n      Thinking: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 1\n        filter: { mainTag: { eq: \"Thinking\" } }\n      ) {\n        nodes {\n          id\n          path\n          title\n          mainTag\n          publishDate\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Announcement: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 1\n        filter: { mainTag: { eq: \"Announcement\" } }\n      ) {\n        nodes {\n          id\n          path\n          title\n          mainTag\n          publishDate\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Activity: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 1\n        filter: { mainTag: { eq: \"Activity\" } }\n      ) {\n        nodes {\n          id\n          path\n          title\n          mainTag\n          publishDate\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  let Thinking = data.Thinking.nodes\n  let Announcement = data.Announcement.nodes\n  let Activity = data.Activity.nodes\n\n  return (\n    <Flex\n      color=\"#fff\"\n      flexWrap=\"wrap\"\n      mt=\"3rem\"\n      justifyContent=\"space-between\"\n      mb=\"7rem\"\n      paddingY=\"2rem\"\n      borderY=\"1px solid #ccc\"\n    >\n      {/* 第一栏 */}\n      <Flex\n        justifyContent=\"flex-start\"\n        flexDir=\"column\"\n        w={[\"100%\", \"100%\", \"30%\", \"30%\"]}\n      >\n        {/* tag */}\n        <Link to={Thinking[0].mainTag}>\n          {/* tag     */}\n          <Heading\n            as=\"h6\"\n            fontSize=\"1rem\"\n            fontWeight=\"900\"\n            color=\"#ee771c\"\n            borderRadius=\"2rem\"\n            display=\"inline-box\"\n            mb=\"1rem\"\n            fontFamily=\"Roboto-Black\"\n          >\n            {/* <FcIdea style={{ marginRight: \"0.5rem\" }} /> */}\n            <section> 💡 &nbsp; 思辨</section>\n          </Heading>\n        </Link>\n        {/* title */}\n        <Link to={Thinking[0].path}>\n          <Heading\n            fontSize=\"1.5rem\"\n            mb=\"0.5rem\"\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n          >\n            {Thinking[0].title}\n          </Heading>\n\n          {/* summary */}\n          <Text>{Thinking[0].summary}</Text>\n        </Link>\n      </Flex>\n      {/* 第二栏 */}\n      <Box borderLeft=\"1px solid #aaa\" />\n      <Flex\n        justifyContent=\"flex-start\"\n        flexDir=\"column\"\n        w={[\"100%\", \"100%\", \"30%\", \"30%\"]}\n      >\n        {/* tag */}\n        <Link to={Announcement[0].mainTag}>\n          {/* tag     */}\n          <Heading\n            as=\"h6\"\n            fontSize=\"1rem\"\n            color=\"#ee771c\"\n            borderRadius=\"2rem\"\n            fontWeight=\"900\"\n            display=\"inline-box\"\n            mb=\"1rem\"\n          >\n            {/* <FcConferenceCall style={{ marginRight: \"0.5rem\" }} /> */}\n            <section> 📢 &nbsp; 通告</section>\n          </Heading>\n        </Link>\n        {/* title */}\n        <Link to={Announcement[0].path}>\n          <Heading\n            fontSize=\"1.5rem\"\n            mb=\"0.5rem\"\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n          >\n            {Announcement[0].title}\n          </Heading>\n\n          {/* summary */}\n          <Text>{Announcement[0].summary}</Text>\n        </Link>\n      </Flex>\n      {/* 第三栏 */}\n      <Box borderLeft=\"1px solid #aaa\" />\n      <Flex\n        justifyContent=\"flex-start\"\n        flexDir=\"column\"\n        w={[\"100%\", \"100%\", \"30%\", \"30%\"]}\n      >\n        {/* tag */}\n        <Link to={Activity[0].mainTag}>\n          {/* tag     */}\n          <Heading\n            as=\"h6\"\n            fontSize=\"1rem\"\n            color=\"#ee771c\"\n            borderRadius=\"2rem\"\n            fontWeight=\"900\"\n            display=\"inline-box\"\n            mb=\"1rem\"\n          >\n            <FcPlanner style={{ marginRight: \"0.5rem\" }} />\n            活动\n          </Heading>\n        </Link>\n        {/* title */}\n        <Link to={Activity[0].path}>\n          <Heading\n            fontSize=\"1.5rem\"\n            mb=\"0.5rem\"\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n          >\n            {Activity[0].title}\n          </Heading>\n          {/* summary */}\n          <Text>{Activity[0].title}</Text>\n        </Link>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default LastRow\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Box, Heading, Text, PseudoBox } from \"@chakra-ui/core\"\nimport { Link } from \"gatsby\"\n// 第一行左侧最新文章\nconst News = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allStrapiArticles(sort: { order: DESC, fields: created_at }, limit: 1) {\n        nodes {\n          id\n          path\n          title\n          summary\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          publishDate(formatString: \"YYYY-MM-DD\")\n        }\n      }\n    }\n  `)\n\n  let news = data.allStrapiArticles.nodes[0]\n\n  return (\n  \n    <Box w={[\"100%\", \"100%\", \"48%\", \"48%\"]} color=\"white\">\n        <Link to={\"/\"+news.path}>\n      {/* 最新tag     */}\n      <Heading as=\"h2\" fontSize=\"0.9rem\" color=\"#ee771c\">\n        最新\n      </Heading>\n      <PseudoBox cursor=\"pointer\" _hover={{ color: \" #ee771c \" }}>\n        {/* title */}\n        <Heading as=\"h1\" fontSize=\"2rem\" pt=\"0.1rem\">\n          {news.title}\n        </Heading>\n        {/* summary */}\n        <Text pt=\"0.8rem\" color=\"white\">\n          {news.summary}\n        </Text>\n      </PseudoBox>\n      </Link>\n      {/* 图片 */}\n      <Box pt=\"1rem\">\n      <Link to={\"/\"+news.path}>\n        <Img style={{borderRadius:\"0.8rem\"}} fluid={news.cover.childImageSharp.fluid} />\n        </Link>\n      </Box>\n    </Box>\n\n  )\n}\n\nexport default News\n","import React from \"react\"\nimport { Flex, Box, Heading, PseudoBox, Text } from \"@chakra-ui/core\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n// 第一行右侧的三篇文章（组件化）\nconst Item = ({ data, order }) => {\n  return (\n    <Link to={data.path}>\n      <PseudoBox\n        color=\"white\"\n        cursor=\"pointer\"\n        _hover={{ color: \" #ee771c \" }}\n        h=\"100%\"\n      >\n        <Flex justifyContent=\"space-between\" minH=\"100%\" alignItems=\"center\">\n          <Box w=\"60%\" alignSelf={order} H=\"100%\">\n            {/* tag     */}\n            {/* <Link to={data.mainTag} > */}\n            <Link\n              to={\n                data.mainTag == \"Ether2\"\n                  ? \"/Eth2\"\n                  : data.mainTag == \"Ether1\"\n                  ? \"/Eth1x\"\n                  : \"/\" + data.mainTag\n              }\n            >\n              <Heading\n                as=\"h2\"\n                fontSize=\"1rem\"\n                color=\"#000\"\n                borderRadius=\"2rem\"\n                paddingX=\"0.5rem\"\n                backgroundColor=\"#ee771c\"\n                display=\"inline-box\"\n              >\n                {data.chineseMainTag}\n              </Heading>\n            </Link>\n\n            {/* title */}\n            <Heading\n              as=\"h1\"\n              mt=\"1rem\"\n              fontSize=\"1.5rem\"\n              whiteSpace=\"nowrap\"\n              style={{ textOverflow: \"ellipsis\" }}\n              overflow=\"hidden\"\n            >\n              {data.title}\n            </Heading>\n\n            {/* summary */}\n            <Text\n              color=\"#ccc\"\n              pt=\"1rem\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n              textOverflow=\"ellipsis\"\n            >\n              {data.summary}\n            </Text>\n          </Box>\n          {/* right side */}\n          <Box w=\"30%\" alignSelf={order}>\n            <Img\n              style={{ borderRadius: \"0.8rem\" }}\n              fluid={data.cover.childImageSharp.fluid}\n            />\n          </Box>\n        </Flex>\n      </PseudoBox>\n    </Link>\n  )\n}\n\nexport default Item\n","import React from \"react\"\nimport { PseudoBox, Box } from \"@chakra-ui/core\"\nimport Item from \"./Item\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// 第一行右侧的三篇文章\nconst Selected = () => {\n  // the selected data\n\n  const data = useStaticQuery(graphql`\n    {\n      allStrapiArticles(\n        filter: { showTheArticle: { eq: true } }\n        limit: 3\n        sort: { fields: publishDate, order: DESC }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          mainTag\n          summary\n          title\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  let { nodes } = data.allStrapiArticles\n\n  return (\n    // container\n    <PseudoBox\n      w={[\"100%\", \"100%\", \"48%\", \"48%\"]}\n      minH=\"100%\"\n      display=\"flex\"\n      flexDir=\"column\"\n      justifyContent=\"space-between\"\n    >\n      {/* {console.log(nodes)} */}\n      {/* 第一栏 */}\n      <Box h=\"31%\">\n        <Item data={nodes[0]} order=\"flex-start\" />\n      </Box>\n      {/* 第二栏 */}\n      <Box h=\"38%\" borderY=\"1px solid gray\">\n        <Item data={nodes[1]} order=\"auto\" />\n      </Box>\n      {/* 第三栏 */}\n      <Box h=\"31%\">\n        <Item data={nodes[2]} order=\"flex-end\" />\n      </Box>\n    </PseudoBox>\n  )\n}\n\nexport default Selected\n","import React from \"react\"\nimport { Flex, Heading, Box, PseudoBox, Text, Stack } from \"@chakra-ui/core\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Eachrowitem = ({ data }) => {\n  return (\n    <PseudoBox\n      w={[\"100%\", \"100%\", \"31%\", \"31%\"]}\n      mx=\"auto\"\n      mb=\"2vw\"\n      pb=\"2vw\"\n      _hover={{ color: \" #6873e5\" }}\n    >\n      {/* 图片 */}\n      <Link to={data.path}>\n        <PseudoBox\n          w=\"100%\"\n          maxW={[\"400px\", \"400px\", \"620px\", \"620px\"]}\n          position=\"relative\"\n        >\n          <Img\n            style={{ borderRadius: \"0.8rem\" }}\n            fluid={data.cover.childImageSharp.fluid}\n          />\n        </PseudoBox>\n      </Link>\n      {/* 描述 */}\n      <Link to={data.path}>\n        <Box px={[\"5vw\", 0, 0, 0]}>\n          <PseudoBox\n            _hover={{ color: \" #6873e5\" }}\n            mb=\"12px\"\n            fontWeight=\"900\"\n            fontSize={[\"2rem\", \"2rem\", \"2rem\", \"1.5rem\"]}\n            lineHeight={[\"2.5rem\", \"2.5rem\", \"2.5rem\", \"2rem\"]}\n            mt={[\"1.2rem\", \"1.2rem\", \"1.2rem\", \"1.5rem\"]}\n            fontFamily=\"NotoSansSC-Medium\"\n            color=\"#fff\"\n            cursor=\"pointer\"\n          >\n            <Heading\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n              textOverflow=\"ellipsis\"\n              mb=\"12px\"\n              fontSize=\"1.3rem\"\n              mt={\"1.2rem\"}\n            >\n              {data.title}\n            </Heading>\n          </PseudoBox>\n          <Text\n            mb=\"1.5em\"\n            fontSize=\"0.9rem\"\n            lineHeight=\"1.5em\"\n            color=\"#999\"\n            cursor=\"pointer\"\n            letterSpacing=\"0.025vw\"\n            fontFamily=\"NotoSansSC-Medium !important\"\n            overflow=\"hidden\"\n            zIndex=\"20\"\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n          >\n            {data.summary}\n          </Text>\n          <Stack isInline>\n            {\" \"}\n            <Img\n              fixed={data.authorImg.childImageSharp.fixed}\n              style={{ borderRadius: \"50%\" }}\n            />\n            <Flex flexDir=\"row\" ml=\"0.5vw\">\n              <Text\n                fontSize=\"0.9rem\"\n                color=\"#6873e5\"\n                fontWeight=\"700\"\n                lineHeight={[\"1rem\", \"1rem\", \"1rem\", \"2rem\"]}\n              >\n                {data.author}\n              </Text>\n              <Text\n                color=\"#aaa\"\n                fontWeight=\"700\"\n                fontSize=\"0.9rem\"\n                lineHeight=\"2rem\"\n                ml=\"1rem\"\n              >\n                {data.publishDate}\n              </Text>\n            </Flex>\n          </Stack>\n        </Box>\n        {/* </Link> */}\n      </Link>\n    </PseudoBox>\n  )\n}\n\nexport default Eachrowitem\n","import React from \"react\"\nimport { Flex, PseudoBox, Box } from \"@chakra-ui/core\"\nimport Eachrowitem from \"./Eachrowitem\"\nimport { Link } from \"gatsby\"\nimport eachRow from \"./eachRow.module.css\"\nimport hovStyle from \"../css/hover.module.css\"\n\nconst Eachrow = ({ data, rowName }) => {\n  return (\n    <>\n      <Flex\n        mt={[\"2rem\", \"2rem\", \"2rem\", \"3rem\"]}\n        className={eachRow.rowsp}\n        alignItems=\"center\"\n        textAlign=\"center\"\n        gridColumn=\"1 / -1\"\n      >\n        <Link to={data[0].mainTag}>\n          <PseudoBox className={hovStyle.ccc}>{rowName}</PseudoBox>\n        </Link>\n      </Flex>\n      <Flex flexWrap=\"wrap\" mt=\"4rem\" justifyContent=\"space-between\">\n        <Eachrowitem data={data[0]} />\n\n        <Eachrowitem data={data[1]} />\n\n        <Eachrowitem data={data[2]} />\n      </Flex>\n    </>\n  )\n}\n\nexport default Eachrow\n","import React from \"react\"\nimport { Box, Heading, Text, PseudoBox } from \"@chakra-ui/core\"\nimport { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PhoneFirstRow = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allStrapiArticles(sort: { order: DESC, fields: publishDate }, limit: 1) {\n        nodes {\n          id\n          path\n          title\n          summary\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          publishDate(formatString: \"YYYY-MM-DD\")\n        }\n      }\n    }\n  `)\n\n  let news = data.allStrapiArticles.nodes[0]\n\n  return (\n    <Box mt=\"8rem\" color=\"white\">\n      <Link to={\"/\" + news.path}>\n        {/* 最新tag     */}\n        <Heading as=\"h2\" fontSize=\"0.9rem\" color=\"#ee771c\">\n          最新\n        </Heading>\n        <PseudoBox cursor=\"pointer\" _hover={{ color: \" #ee771c \" }}>\n          {/* title */}\n          <Heading as=\"h1\" size=\"xl\" pt=\"0.1rem\">\n            {news.title}\n          </Heading>\n          {/* summary */}\n          <Text pt=\"0.8rem\" color=\"white\">\n            {news.summary}\n          </Text>\n        </PseudoBox>\n      </Link>\n      {/* 图片 */}\n      <Box pt=\"1rem\">\n        <Link to={\"/\" + news.path}>\n          <Img fluid={news.cover.childImageSharp.fluid} />\n        </Link>\n      </Box>\n    </Box>\n  )\n}\n\nexport default PhoneFirstRow\n","import React from \"react\"\nimport { Flex, Box, Heading, PseudoBox, Text } from \"@chakra-ui/core\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n// 第一行右侧的三篇文章（组件化）\nconst Item = ({ data,order }) => {\n  return (\n    <Link to={data.path}>  \n    <PseudoBox color=\"white\" cursor=\"pointer\" _hover={{ color: \" #ee771c \" }} h=\"100%\" >\n      <Flex justifyContent=\"space-between\" minH=\"100%\" alignItems=\"center\">\n        <Box w=\"100%\" alignSelf={order}> \n\n          \n          {/* tag     */}\n          <Heading\n            as=\"h2\"\n            fontSize=\"0.9rem\"\n            color=\"#000\"\n            borderRadius=\"2rem\"\n            paddingX=\"0.5rem\"\n            backgroundColor=\"#ee771c\"\n            display=\"inline-box\"\n          >\n            {data.mainTag}\n          </Heading>\n\n          {/* title */}\n          <Heading as=\"h1\" fontSize=\"1.5rem\" pt=\"0.45rem\" whiteSpace=\"nowrap\" style={{textOverflow:\"ellipsis\"}} overflow=\"hidden\">\n            {data.title}\n          </Heading>\n\n        {/*  cover */}\n          \n        <Box w=\"100%\"  alignSelf={order} mt=\"3rem\">\n          <Img fluid={data.cover.childImageSharp.fluid} />\n        </Box>\n\n          {/* summary */}\n          <Text color=\"#ccc\" pt=\"1rem\" fontSize=\"1rem\" >{data.summary}</Text>\n        </Box>\n        {/* right side */}\n\n      </Flex>\n    </PseudoBox>\n    </Link>\n  )\n}\n\nexport default Item\n","import React from \"react\"\nimport { PseudoBox, Box } from \"@chakra-ui/core\"\nimport Item from \"./PhoneItem\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst PhoneSecondRow = () => {\n\n  const data = useStaticQuery(graphql`\n    {\n      allStrapiArticles(\n        filter: { showTheArticle: { eq: true } }\n        limit: 3\n        sort: { fields: publishDate, order: DESC }\n      ) {\n        nodes {\n          id\n          path\n          mainTag\n          summary\n          title\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  let { nodes } = data.allStrapiArticles\n\n  return (\n    <PseudoBox\n      mt=\"4rem\"\n      minH=\"100%\"\n      display=\"flex\"\n      flexDir=\"column\"\n    >\n      {/* {console.log(nodes)} */}\n      {/* 第一栏 */}\n      <Box h=\"33.3%\" paddingY=\"2rem\">\n        <Item data={nodes[0]} order=\"flex-start\" />\n      </Box >\n      {/* 第二栏 */}\n      <Box paddingY=\"2rem\" h=\"33.3%\" borderY=\"1px solid #ccc\">\n        <Item data={nodes[1]} order=\"auto\" />\n      </Box>\n      {/* 第三栏 */}\n      <Box paddingY=\"2rem\" h=\"33.3%\">\n        <Item data={nodes[2]} order=\"flex-end\" />\n      </Box>\n    </PseudoBox>\n  )\n}\n\nexport default PhoneSecondRow\n","import React from \"react\"\nimport * as framerMotion from \"framer-motion\"\nimport { Box,  Text } from \"@chakra-ui/core\"\n\nconst PhoneButton = ({ color, value }) => {\n  // Create a custom motion component from Box\n  const MotionBox = framerMotion.motion.custom(Box)\n  return (\n\n    <Box w=\"20%\">\n      <MotionBox\n        marginY=\"1rem\"\n        bg={color + \".500\"}\n        drag=\"x\"\n        dragConstraints={{ left: -100, right: 100 }}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n      >\n        <Box textAlign=\"center\" color=\"#fff\">\n          <Text>{value}</Text>\n        </Box>\n      </MotionBox>\n    </Box>\n  )\n}\n\nexport default PhoneButton\n","import React from \"react\"\nimport { Flex, Heading, Box, PseudoBox, Text, Stack } from \"@chakra-ui/core\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PhoneEachRow = ({ data }) => {\n  return (\n    <PseudoBox\n      w={[\"100%\", \"100%\", \"31%\", \"31%\"]}\n      mx=\"auto\"\n      mb=\"2vw\"\n      pb=\"2vw\"\n      _hover={{ color: \" #6873e5\" }}\n    >\n      {/* 图片 */}\n      <PseudoBox\n        w=\"100%\"\n        // maxW={[\"400px\", \"400px\", \"620px\", \"620px\"]}\n        mx=\"auto\"\n        position=\"relative\"\n      >\n        <Img fluid={data.cover.childImageSharp.fluid} />\n      </PseudoBox>\n      {/* 描述 */}\n      <Link to={data.path}>\n        <Box px={[\"5vw\", 0, 0, 0]}>\n          <PseudoBox\n            _hover={{ color: \" #6873e5\" }}\n            mb=\"12px\"\n            fontWeight=\"900\"\n            fontSize={[\"2rem\", \"2rem\", \"2rem\", \"1.5rem\"]}\n            lineHeight={[\"2.5rem\", \"2.5rem\", \"2.5rem\", \"2rem\"]}\n            mt={[\"1.2rem\", \"1.2rem\", \"1.2rem\", \"1.5rem\"]}\n            fontFamily=\"NotoSansSC-Medium\"\n            color=\"#fff\"\n            cursor=\"pointer\"\n          >\n            <Heading mb=\"12px\" fontSize=\"1.3rem\" mt={\"1.2rem\"}>\n              {data.title}\n            </Heading>\n          </PseudoBox>\n          <Text\n            mb=\"1.5em\"\n            fontSize=\"0.9rem\"\n            lineHeight=\"1.5em\"\n            color=\"#999\"\n            letterSpacing=\"0.025vw\"\n            fontFamily=\"NotoSansSC-Medium !important\"\n          >\n            {data.summary}\n          </Text>\n          <Stack isInline>\n            {\" \"}\n            <Img\n              fixed={data.authorImg.childImageSharp.fixed}\n              style={{ borderRadius: \"50%\" }}\n            />\n            <Flex flexDir=\"column\" ml=\"0.5vw\">\n              <Text\n                fontSize=\"0.5rem\"\n                color=\"#6873e5\"\n                fontWeight=\"700\"\n                lineHeight=\"1rem\"\n              >\n                {data.author}\n              </Text>\n              <Text\n                color=\"#aaa\"\n                fontWeight=\"700\"\n                fontSize=\"0.5rem\"\n                lineHeight=\"1.3rem\"\n              >\n                {data.publishDate}\n              </Text>\n            </Flex>\n          </Stack>\n        </Box>\n        {/* </Link> */}\n      </Link>\n    </PseudoBox>\n  )\n}\n\nexport default PhoneEachRow\n","import React from \"react\"\nimport SEO from \"react-seo-component\"\nimport { Flex, Box } from \"@chakra-ui/core\"\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport LastRow from \"../components/HomePageComponents/LastRow\"\nimport { Link } from \"gatsby\"\n// 第一栏\nimport News from \"../components/HomePageComponents/News\"\nimport Selected from \"../components/HomePageComponents/Selected\"\n\n// 第三栏\nimport Eachrow from \"../components/HomePageComponents/Eachrow\"\n\n// 手机端第一栏\nimport PhoneFirstRow from \"../components/HomePageComponents/PhoneFirstRow\"\n\n// 手机端最新\nimport PhoneSecondRow from \"../components/HomePageComponents/PhoneSecondRow\"\n\n// 手机端按钮\nimport PhoneButton from \"../components/HomePageComponents/PhoneButton\"\n\n// 各个栏目分配\nimport PhoneEachRow from \"../components/HomePageComponents/PhoneEachRow\"\n\n// 底部\nimport Footer from \"../components/FooterComponents/Footer\"\n\nconst Index = () => {\n  // const {siteMetadata} = props.data.site\n\n  const data = useStaticQuery(graphql`\n    {\n      Eth2: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Eth2\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Layer2: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Layer2\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n\n      Technology: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Technology\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Staking: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Staking\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      DeFi: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"DeFi\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Eth1x: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Eth1x\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Ecosystem: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Ecosystem\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Thinking: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Thinking\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Announcement: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Announcement\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      Activity: allStrapiArticles(\n        sort: { fields: publishDate, order: DESC }\n        limit: 3\n        filter: { mainTag: { eq: \"Activity\" } }\n      ) {\n        nodes {\n          id\n          chineseMainTag\n          path\n          title\n          mainTag\n          publishDate(formatString: \"YYYY/MM/DD\")\n          summary\n          author\n          authorImg {\n            childImageSharp {\n              fixed(width: 32, height: 32) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          cover {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          keywords\n          siteLanguage\n          siteLocale\n          siteUrl\n          twitterUsername\n        }\n      }\n      file(name: { eq: \"hero\" }) {\n        childrenImageSharp {\n          fixed {\n            src\n          }\n        }\n      }\n    }\n  `)\n\n  let Eth2 = data.Eth2.nodes\n  let Layer2 = data.Layer2.nodes\n  let Technology = data.Technology.nodes\n  let Staking = data.Staking.nodes\n  let DeFi = data.DeFi.nodes\n  let Eth1x = data.Eth1x.nodes\n  let Ecosystem = data.Ecosystem.nodes\n  let Thinking = data.Thinking.nodes\n  let Announcement = data.Announcement.nodes\n  let Activity = data.Activity.nodes\n\n  return (\n    <Layout>\n      <SEO\n        title=\"以太坊中国\"\n        titleTemplate={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        image={\n          \"https://ethereum.cn\" + data.file.childrenImageSharp[0].fixed.src\n        }\n        pathname={\"https://www.ethereum.cn\"}\n        siteLanguage={data.site.siteMetadata.siteLanguage}\n        siteLocale={data.site.siteMetadata.siteLocale}\n        twitterUsername={data.site.siteMetadata.twitterUsername}\n        author={data.site.siteMetadata.author}\n        publishedDate={data.site.siteMetadata.lastBuildDate}\n        modifiedDate={new Date(Date.now()).toISOString()}\n      />\n      {/* pc端 */}\n      <Box display={[\"none\", \"none\", \"inline\", \"inline\"]}  margin=\"0 auto\">\n        {/* 第一栏 */}\n        <Flex mt=\"10rem\" flexWrap=\"wrap\" justifyContent=\"space-between\">\n          <News />\n          <Selected />\n        </Flex>\n        {/* 第二栏 */}\n        {/* <Box\n          backgroundColor=\"#fff\"\n          w={[\"100%\", \"100%\", \"100%\", \"75%\"]}\n          margin=\"0 auto\"\n          mt={[\"2rem\", \"2rem\", \"2rem\", \"8rem\"]}\n        >\n          <Swiper />\n        </Box> */}\n        <Box h=\"3.5rem\" />\n        {/* 第三栏 */}\n        <Eachrow data={Eth2} rowName=\"ETH 2.0\" />\n        new array\n        <Eachrow data={Layer2} rowName=\"扩容方案\" />\n        {/* 第四栏 */}\n        <Eachrow data={Technology} rowName=\"技术\" />\n        {/* 第五栏 */}\n        <Eachrow data={Staking} rowName=\"Staking\" />\n        {/* 第六栏 */}\n        <Eachrow data={DeFi} rowName=\"DeFi\" />\n        {/* 第七栏 */}\n        <Eachrow data={Eth1x} rowName=\"ETH 1.X\" />\n        {/* 第八栏 */}\n        <Eachrow data={Ecosystem} rowName=\"生态\" />\n        {/* 第九栏目 */}\n        <LastRow />\n      </Box>\n\n      {/* 手机端 */}\n      <Box display={[\"inline\", \"inline\", \"none\", \"none\"]}>\n        <PhoneFirstRow />\n        <PhoneSecondRow />\n\n        {/* 第一个导航按钮 */}\n        <Link to=\"Eth2\">\n          <PhoneButton color=\"red\" value=\"ETH 2.0\" />\n        </Link>\n        <PhoneEachRow data={Eth2[0]} />\n\n        {/* 第一个导航按钮 */}\n        <Link to=\"扩容方案\">\n          <PhoneButton color=\"cyan\" value=\"Layer2\" />\n        </Link>\n        <PhoneEachRow data={Layer2[0]} />\n\n        <Link to=\"Technology\">\n          <PhoneButton color=\"yellow\" value=\"技术\" />\n        </Link>\n        <PhoneEachRow data={Technology[0]} />\n\n        <Link to=\"Staking\">\n          <PhoneButton color=\"blue\" value=\"Staking\" />\n        </Link>\n        <PhoneEachRow data={Staking[0]} />\n\n        <Link to=\"DeFi\">\n          <PhoneButton color=\"green\" value=\"DeFi\" />\n        </Link>\n        <PhoneEachRow data={DeFi[0]} />\n\n        <Link to=\"Eth1x\">\n          <PhoneButton color=\"purple\" value=\"ETH 1.X\" />\n        </Link>\n        <PhoneEachRow data={Eth1x[0]} />\n\n        <Link to=\"Ecosystem\">\n          <PhoneButton color=\"blue\" value=\"生态\" />\n        </Link>\n        <PhoneEachRow data={Ecosystem[0]} />\n\n        <Link to=\"Thinking\">\n          <PhoneButton color=\"pink\" value=\"思辨\" />\n        </Link>\n        <PhoneEachRow data={Thinking[0]} />\n\n        <Link to=\"Announcement\">\n          <PhoneButton color=\"purple\" value=\"通告\" />\n        </Link>\n        <PhoneEachRow data={Announcement[0]} />\n\n        <Link to=\"Activity\">\n          <PhoneButton color=\"orange\" value=\"活动\" />\n        </Link>\n        <PhoneEachRow data={Activity[0]} />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Index\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { forwardRef } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport Flex from \"../Flex\";\nimport Box from \"../Box\"; // TODO: Reduce complexity by deprecating isInline and isReversed prop\n\nvar Stack = forwardRef(function (_ref, ref) {\n  var direction = _ref.direction,\n      _ref$isInline = _ref.isInline,\n      isInline = _ref$isInline === void 0 ? false : _ref$isInline,\n      _ref$isReversed = _ref.isReversed,\n      isReversed = _ref$isReversed === void 0 ? false : _ref$isReversed,\n      children = _ref.children,\n      align = _ref.align,\n      justify = _ref.justify,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      shouldWrapChildren = _ref.shouldWrapChildren,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"direction\", \"isInline\", \"isReversed\", \"children\", \"align\", \"justify\", \"spacing\", \"shouldWrapChildren\"]);\n\n  var _isReversed = isReversed || direction && direction.endsWith(\"reverse\");\n\n  var _isInline = isInline || direction && direction.startsWith(\"row\");\n\n  var _direction;\n\n  if (_isInline) {\n    _direction = \"row\";\n  }\n\n  if (_isReversed) {\n    _direction = isInline ? \"row-reverse\" : \"column-reverse\";\n  }\n\n  if (direction) {\n    _direction = direction;\n  }\n\n  if (!_isInline && !_isReversed && !direction) {\n    _direction = \"column\";\n  }\n\n  var validChildrenArray = Children.toArray(children).filter(isValidElement);\n  return jsx(Flex, _extends({\n    align: align,\n    justify: justify,\n    direction: _direction\n  }, rest, {\n    ref: ref\n  }), validChildrenArray.map(function (child, index) {\n    var _ref2, _ref3;\n\n    var isLastChild = validChildrenArray.length === index + 1;\n    var spacingProps = _isInline ? (_ref2 = {}, _ref2[_isReversed ? \"ml\" : \"mr\"] = isLastChild ? null : spacing, _ref2) : (_ref3 = {}, _ref3[_isReversed ? \"mt\" : \"mb\"] = isLastChild ? null : spacing, _ref3);\n\n    if (shouldWrapChildren) {\n      return jsx(Box, _extends({\n        d: \"inline-block\"\n      }, spacingProps, {\n        key: \"stack-box-wrapper-\" + index\n      }), child);\n    }\n\n    return cloneElement(child, spacingProps);\n  }));\n});\nexport default Stack;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ccc\":\"hover-module--ccc--1NkC6\"};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport Box from \"../Box\";\nimport { forwardRef } from \"react\";\nvar sizes = {\n  \"2xl\": [\"4xl\", null, \"5xl\"],\n  xl: [\"3xl\", null, \"4xl\"],\n  lg: [\"xl\", null, \"2xl\"],\n  md: \"xl\",\n  sm: \"md\",\n  xs: \"sm\"\n};\nvar Heading = forwardRef(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"size\"]);\n\n  return jsx(Box, _extends({\n    ref: ref,\n    as: \"h2\",\n    fontSize: sizes[size],\n    lineHeight: \"shorter\",\n    fontWeight: \"bold\",\n    fontFamily: \"heading\"\n  }, props));\n});\nHeading.displayName = \"Heading\";\nexport default Heading;"],"sourceRoot":""}